// <auto-generated />
using System;
using BartoszDudekLab7.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BartoszDudekLab7.Migrations
{
    [DbContext(typeof(SkiJumpingContext))]
    partial class SkiJumpingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BartoszDudekLab7.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<float>("Record");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BartoszDudekLab7.Models.Jumper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<int>("CountryId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<float>("Height");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<float>("PersonalBest");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Jumpers");
                });

            modelBuilder.Entity("BartoszDudekLab7.Models.Jumper", b =>
                {
                    b.HasOne("BartoszDudekLab7.Models.Country", "Country")
                        .WithMany("Jumpers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
